require(ggrepel)
sig_up = which(x > x_cutoffs[2] & y > y_cutoff)
sig_down = which(x < x_cutoffs[1] & y > y_cutoff)
if (is.null(to_color)){
to_color = c(sig_up, sig_down)
}
pt_colors = rep('grey', length(x))
pt_colors[to_color] = ifelse(x[to_color] > 0, up_col,
ifelse(x[to_color] < 0, down_col, 'grey60'))
if (!is.null(pt_labels)){
to_label = c(sig_up, sig_down)
}
labels=rep("", length(x))
labels[to_label]<- pt_labels[to_label]
df <- data.frame(Log2FC=x,
minLog10p=y,
pt_labels=labels,
pt_colors=pt_colors)
ggp<-  ggplot(df)+
aes(x=Log2FC,y=minLog10p, label = pt_labels) +
geom_point(shape = 21, colour = "black", fill = pt_colors, size = 3, stroke = 1) +
geom_text_repel(color=pt_colors, max.overlaps = 30)+
labs(title = main,
x=xlab,
y=ylab)+
coord_cartesian(xlim = xlim, ylim = ylim)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
if(plot_lines==T)      {
ggp<-ggp +
geom_hline(yintercept = y_cutoff, color="grey60", linetype="dashed")+
geom_vline(xintercept = x_cutoffs[2], color=up_col, linetype="dashed")+
geom_vline(xintercept = x_cutoffs[1], color=down_col, linetype="dashed")
}
return(ggp)
}
#Contrast1.......................................................................
DS_to_Ctrl.UT<- topTable(fit2, coef=1, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(DS_to_Ctrl.UT)
saveRDS(DS_to_Ctrl.UT, file = paste0(path,"DStoCTR_New.rds"))
plot_volcano(x = DS_to_Ctrl.UT$logFC,
y = -log10(DS_to_Ctrl.UT$P.Value),
plot_lines = T,
y_cutoff = -log10(.05),
x_cutoffs = c(-.5, .5), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'DS compared to Ctrl (Untreated) \nmodel fit with age and sex',
pt_labels = rownames(DS_to_Ctrl.UT))
ggsave(
filename="DStoCtrl(Untreated).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
DS_to_Ctrl.T<- topTable(fit2, coef=2, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(DS_to_Ctrl.T)
ggsave(
filename="DStoCtrl(Treated).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
plot_volcano(x = DS_to_Ctrl.T$logFC,
y = -log10(DS_to_Ctrl.T$P.Value),
plot_lines = T,
y_cutoff = -log10(.05),
x_cutoffs = c(-.5, .5), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'DS compared to Ctrl (Treated) \nmodel fit with age and sex',
pt_labels = rownames(DS_to_Ctrl.T))
names(AOAA_to_UT.CTR)
#Contrast3...............................
AOAA_to_UT.CTR<- topTable(fit2, coef=3, adjust.method = "fdr", number= nrow(fit2), confint = T)
plot_volcano(x = AOAA_to_UT.CTR$logFC,
y = -log10(AOAA_to_UT.CTR$P.Value),
plot_lines = T,
y_cutoff = -log10(.1),
x_cutoffs = c(-.2, .2), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'AOAA compared to Untreated (CTR) \nmodel fit with age and sex',
pt_labels = rownames(AOAA_to_UT.CTR))
AOAA_to_UT.DS<- topTable(fit2, coef=4, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(AOAA_to_UT.DS)
ggsave(
filename="AOAAtoUT(Ctrl).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
plot_volcano(x = AOAA_to_UT.DS$logFC,
y = -log10(AOAA_to_UT.DS$P.Value),
plot_lines = F,
y_cutoff = -log10(.1),
x_cutoffs = c(-.5, .5), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'AOAA compared to Untreated (DS) \nmodel fit with age and sex',
pt_labels = rownames(AOAA_to_UT.DS))
interaction<- topTable(fit2, coef=5, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(interaction)
ggsave(
filename="Interaction.png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
ggsave(
filename="AOAAtoUT(DS).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
plot_volcano(x = interaction$logFC,
y = -log10(interaction$P.Value),
plot_lines = T,
y_cutoff = -log10(.1),
x_cutoffs = c(-.2, .2), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'Interaction \nmodel fit with age and sex',
pt_labels = rownames(interaction))
fData(esetN_Norm)
fData(esetN)
names(fData(esetN))
names(fData(esetN_norm))
de<-merge(DS_to_Ctrl.UT,fData(esetN_norm), by=0, ALL=T)
head(de)
names(de)
names(DS_to_Ctrl.UT)
##############################################################################
path="C:\\Users\\Acer 3\\Documents\\CsabaII\\mRNA\\"
library(limma)
library(Biobase)
library(readxl)
library(plyr)
library(impute)
eset <- readRDS(paste0(path,"Gene_eset.rds"))
# View the distribution of the raw data
plotDensities(eset, legend = FALSE)
# Log tranform
exprs(eset) <- log2(exprs(eset))
plotDensities(eset, legend = FALSE)
#cut low abundance genes
eset<-eset[rowSums(exprs(eset))>200,]
plotDensities(eset, legend = FALSE)
# Quantile normalize
exprs(eset) <- normalizeBetweenArrays(exprs(eset))
plotDensities(eset, legend = FALSE)
names(pData(eset))
pData(eset)$Group <-factor(pData(eset)$Group)
pData(eset)$Gender <-factor(pData(eset)$Gender)
pData(eset)$Age <-as.numeric(as.character(pData(eset)$Age ))
pData(eset)$Group <- factor(pData(eset)$Group,
levels = c( "Ctrl UT"  , "Ctrl AOAA","DS UT" ,    "DS AOAA" ))
dim(exprs(eset))
#Stuxy design
design <- with(pData(eset),model.matrix(~0 + Group + Age + Gender))
design
colnames(design)[1:4]
colnames(design)[1:4] <- c("Ctrl_UT", "Ctrl_AOAA", "DS_UT","DS_AOAA")
colSums(design)
# Create a contrasts matrix
cm <- makeContrasts(type_UT = DS_UT - Ctrl_UT,
type_T = DS_AOAA - Ctrl_AOAA,
type_Ctrl = Ctrl_AOAA - Ctrl_UT,
type_DS = DS_AOAA - DS_UT,
interaction=(DS_AOAA - DS_UT)-
(Ctrl_AOAA - Ctrl_UT),
levels = design)
# View the contrasts matrix
cm
# Fit the model
fit <- lmFit(eset, design)
# Fit the contrasts
fit2 <- contrasts.fit(fit, contrasts = cm)
# Calculate the t-statistics for the contrasts
fit2 <- eBayes(fit2)
fit2
# Summarize results
results <- decideTests(fit2)
summary(results)
stats <- topTable(fit2, number = nrow(fit2), sort.by = "none")
head(stats)
# Plot a histogram of the p-values
hist(stats[, "P.Value"])
#User defined function#############################################################
plot_volcano = function(x,
y,
main = '',
xlab = 'log2 FC',
ylab = '-log10 adj p',
x_cutoffs = log2(c(.8, 1.2)),
las = 1,
y_cutoff = -log10(.01),
plot_lines = T,
up_col = '#9E0142',
down_col = '#3288BD',
to_color = NULL,    # indexes of points to color - will be automatically colored up/down
pt_labels = NULL,   # all labels - will automatically only write the sig ones
xlim =c(-2, 2), ylim = NULL){
require(ggplot2)
require(ggrepel)
sig_up = which(x > x_cutoffs[2] & y > y_cutoff)
sig_down = which(x < x_cutoffs[1] & y > y_cutoff)
if (is.null(to_color)){
to_color = c(sig_up, sig_down)
}
pt_colors = rep('grey', length(x))
pt_colors[to_color] = ifelse(x[to_color] > 0, up_col,
ifelse(x[to_color] < 0, down_col, 'grey60'))
if (!is.null(pt_labels)){
to_label = c(sig_up, sig_down)
}
labels=rep("", length(x))
labels[to_label]<- pt_labels[to_label]
df <- data.frame(Log2FC=x,
minLog10p=y,
pt_labels=labels,
pt_colors=pt_colors)
ggp<-  ggplot(df)+
aes(x=Log2FC,y=minLog10p, label = pt_labels) +
geom_point(shape = 21, colour = "black", fill = pt_colors, size = 3, stroke = 1) +
geom_text_repel(color=pt_colors, max.overlaps = 30)+
labs(title = main,
x=xlab,
y=ylab)+
coord_cartesian(xlim = xlim, ylim = ylim)+
theme_bw()+
theme(panel.grid.major = element_blank(),
panel.grid.minor = element_blank())
if(plot_lines==T)      {
ggp<-ggp +
geom_hline(yintercept = y_cutoff, color="grey60", linetype="dashed")+
geom_vline(xintercept = x_cutoffs[2], color=up_col, linetype="dashed")+
geom_vline(xintercept = x_cutoffs[1], color=down_col, linetype="dashed")
}
return(ggp)
}
##################################################################
#Contrast1.......................................................................
DS_to_Ctrl.UT<- topTable(fit2, coef=1, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(DS_to_Ctrl.UT)
saveRDS(DS_to_Ctrl.UT, file = paste0(path,"DStoCTR_UT_mRNA.rds"))
plot_volcano(x = DS_to_Ctrl.UT$logFC,
y = -log10(DS_to_Ctrl.UT$P.Value),
plot_lines = T,
y_cutoff = -log10(.05),
x_cutoffs = c(-.5, .5), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'DS compared to Ctrl (Untreated) \nmodel fit with age and sex',
pt_labels = rownames(DS_to_Ctrl.UT))
DS_to_Ctrl.T<- topTable(fit2, coef=2, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(DS_to_Ctrl.T)
ggsave(
filename="DStoCtrl(Untreated).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
saveRDS(DS_to_Ctrl.T, file = paste0(path,"DStoCTR_T_mRNA.rds"))
ggsave(
filename="DStoCtrl(Treated).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
names(AOAA_to_UT.CTR)
saveRDS(AOAA_to_UT.CTR, file = paste0(path,"AOAAtoUT_CTR_mRNA.rds"))
ggsave(
filename="AOAAtoUT(Ctrl).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
AOAA_to_UT.DS<- topTable(fit2, coef=4, adjust.method = "fdr", number= nrow(fit2), confint = T)
plot_volcano(x = DS_to_Ctrl.T$logFC,
y = -log10(DS_to_Ctrl.T$P.Value),
plot_lines = T,
y_cutoff = -log10(.05),
x_cutoffs = c(-.5, .5), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'DS compared to Ctrl (Treated) \nmodel fit with age and sex',
pt_labels = rownames(DS_to_Ctrl.T))
names(AOAA_to_UT.DS)
saveRDS(AOAA_to_UT.DS, file = paste0(path,"AOAAtoUT_DS_mRNA.rds"))
ggsave(
filename="AOAAtoUT(DS).png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
#Contrast3...............................
AOAA_to_UT.CTR<- topTable(fit2, coef=3, adjust.method = "fdr", number= nrow(fit2), confint = T)
plot_volcano(x = AOAA_to_UT.CTR$logFC,
y = -log10(AOAA_to_UT.CTR$P.Value),
plot_lines = T,
y_cutoff = -log10(.1),
x_cutoffs = c(-.2, .2), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'AOAA compared to Untreated (CTR) \nmodel fit with age and sex',
pt_labels = rownames(AOAA_to_UT.CTR))
interaction<- topTable(fit2, coef=5, adjust.method = "fdr", number= nrow(fit2), confint = T)
names(interaction)
ggsave(
filename="Interaction.png",
plot = last_plot(),
path = path,
scale = 1,
width = 8,
height = 6,
units = "in",
dpi = 300,
limitsize = TRUE
)
plot_volcano(x = AOAA_to_UT.DS$logFC,
y = -log10(AOAA_to_UT.DS$P.Value),
plot_lines = F,
y_cutoff = -log10(.1),
x_cutoffs = c(-.5, .5), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'AOAA compared to Untreated (DS) \nmodel fit with age and sex',
pt_labels = rownames(AOAA_to_UT.DS))
plot_volcano(x = interaction$logFC,
y = -log10(interaction$P.Value),
plot_lines = T,
y_cutoff = -log10(.1),
x_cutoffs = c(-.2, .2), xlim = c(-2,2),
xlab = 'log2 FC',
ylab = '-log10 p',
up_col = 'red',
down_col = 'blue',
main = 'Interaction \nmodel fit with age and sex',
pt_labels = rownames(interaction))
write_xlsx(list(`DS vs. Ctrl UnTreated`=
data.frame(DS_to_Ctrl.UT[3],DS_to_Ctrl.UT[-3]),
`DS vs. Ctrl Treated`=
data.frame(DS_to_Ctrl.T[3],DS_to_Ctrl.T[-3]),
`AOAA vs. UnTreated Ctrl`=
data.frame(AOAA_to_UT.CTR[3],AOAA_to_UT.CTR[-3]),
`AOAA vs. UnTreated DS`=
data.frame(AOAA_to_UT.DS [3],AOAA_to_UT.DS[-3]),
interaction=
data.frame(interaction[3],interaction[-3])),
paste0(path,"Transcriptome_tables.xlsx"))
names(DS_to_Ctrl.UT)
names(DS_to_Ctrl.UT)
names(DS_to_Ctrl.UT)
#add pathway function###################################
#add_pathways <- function (df){
startdf<-fData(eset)[rownames(fData(eset)) %in%  rownames(DS_to_Ctrl.UT),]
head(startdf)
startdf<-data.frame(GENENAME=rownames(startdf), startdf)
names(startdf)
keytypes(org.Hs.eg.db)
dfA<-AnnotationDbi::select(org.Hs.eg.db,
keys=rownames(startdf),
keytype = "GENENAME",
c("GENENAME","PATH"))
library(KEGG.db)
xx <- as.list(KEGGPATHNAME2ID)
dfA$PATH[2]
length(dfA$PATH)
pathwaylist<-NULL
for(ind in 1:length(dfA$PATH)){
pathid<-dfA$PATH[ind]
if (!is.na(pathid)){
sellistelement=xx[xx==pathid]
pathwaylist[ind]=names(sellistelement)
}else{
pathwaylist[ind]=NA
}
}
dfA$PATHWAY=pathwaylist
head(dfA)
names(dfA)
dfB<-dfA %>%
group_by(GENENAME) %>%
mutate(PATHWAYS = paste0(PATHWAY, collapse = ", ")) %>%
distinct(PATHWAYS)
startdf$PATHWAYS=dfB$PATHWAYS
names(startdf)
startdf <- dplyr::select(startdf, "PATHWAYS")
print(sum(!rownames(startdf) %in% rownames(df)))
print(sum(!rownames(startdf) %in% rownames(DS_to_Ctrl.UT)))
#add pathway function###################################
add_pathways <- function (df){
startdf<-fData(eset)[rownames(fData(eset)) %in%  rownames(df),]
head(startdf)
startdf<-data.frame(GENENAME=rownames(startdf), startdf)
names(startdf)
keytypes(org.Hs.eg.db)
dfA<-AnnotationDbi::select(org.Hs.eg.db,
keys=rownames(startdf),
keytype = "GENENAME",
c("GENENAME","PATH"))
library(KEGG.db)
xx <- as.list(KEGGPATHNAME2ID)
dfA$PATH[2]
length(dfA$PATH)
pathwaylist<-NULL
for(ind in 1:length(dfA$PATH)){
pathid<-dfA$PATH[ind]
if (!is.na(pathid)){
sellistelement=xx[xx==pathid]
pathwaylist[ind]=names(sellistelement)
}else{
pathwaylist[ind]=NA
}
}
dfA$PATHWAY=pathwaylist
head(dfA)
names(dfA)
dfB<-dfA %>%
group_by(GENENAME) %>%
mutate(PATHWAYS = paste0(PATHWAY, collapse = ", ")) %>%
distinct(PATHWAYS)
startdf$PATHWAYS=dfB$PATHWAYS
names(startdf)
startdf <- dplyr::select(startdf, "PATHWAYS")
print(sum(!rownames(startdf) %in% rownames(df)))
de <- merge(df, startdf, by=0, all=TRUE)
names(de)
sorteddf<-de[order(de$P.Value),]
names(sorteddf)[names(sorteddf)=="Row.names"]<-"Gene"
return (sorteddf)
}
########################################################
names(add_pathways(DS_to_Ctrl.UT))
########################################################
names(add_pathways(DS_to_Ctrl.UT)[-4])
write_xlsx(list(`DS vs. Ctrl UnTreated`=
add_pathways(DS_to_Ctrl.UT)[-4],
`DS vs. Ctrl Treated`=
add_pathways(DS_to_Ctrl.T)[-4],
`AOAA vs. UnTreated Ctrl`=
add_pathways(AOAA_to_UT.CTR)[-4],
`AOAA vs. UnTreated DS`=
add_pathways(AOAA_to_UT.DS)[-4],
interaction=
add_pathways(interaction)[-4]),
paste0(path,"Transcriptome_tables.xlsx"))
